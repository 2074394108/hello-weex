<template>
  <div>

    <div class="nav-bar">
      <text class="select-language" onclick="onclickRightItem">{{currentLanguage}}</text>
    </div>


    <list class="list">
      <refresh class="refresh" display="{{displayRefresh}}" onrefresh="handleRefresh">
        <div id="animation" onfocus="{{rotate}}" onload="{{rotate}}">
          <image class="img-circle" onfocus="{{rotate}}" src="{{splashCircle}}" onclick="{{rotate}}" />
        </div>
        <text style="margin-left:36px;color:rgb(238, 162, 54)">下拉刷新...</text>
      </refresh>

     <cell onappear="onappear" ondisappear="ondisappear" onclick="onclickcell" class="row" repeat="{{(k , v) in rows}}" index="{{k}}">
        <rep-rank-item index="{{k}}" login="{{v.owner.login}}" avatar_url="{{v.owner.avatar_url}}" name="{{v.name}}" description="{{v.description}}" homepage="{{v.homepage}}" stargazers_count="{{v.stargazers_count}}"></rep-rank-item>
      </cell>
      <loading class="loading-view" display="{{loadingDisplay}}" onloading="onloading">
        <text class="loading-text" style="text-align: center; color:rgb(238, 162, 54)" if="{{(refreshDisplay==='hide' && rows.length > 0)}}">Load more</text>
        <loading-indicator class="indicator"></loading-indicator>
      </loading>

    </list>
  </div>
</template>

<style>

  .list {
    width: 750px;
    flex: 1;
  }
  .indicator {
    height:60;
    width:60;
    color:#3192e1;
  }
  .row {
    width: 750px;

  }
  .item {
    border-bottom-width: 1px;
    border-bottom-color: #c0c0c0;
    padding:0px;
  }
  .item-title {
    color: #437ABE;
  }
  .loading-text {
    font-size: 30px;
    color: #45b5f0;
  } 

  .loading-view {
    height: 120px;
    width: 750px;
    display: -ms-flex;
    display: -webkit-flex;
    display: flex;
    -ms-flex-align: center;
    -webkit-align-items: center;
    -webkit-box-align: center;
    align-items: center;
  }
  .refresh {
    height: 120px;
    width: 750px;
    flex-direction: row;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .img-circle {
    /*不支持100%*/
    width: 60; 
    height:60;
    align-items: center;
    justify-content: center;
    /*position:absolute;z-index: 10;left:0px;top:0px;*/
  }
  .select-language {
    margin-left:520px;
    color:#DC544C;
    font-size: 44px;
  }

  .nav-bar {
    height: 80px;
    width: 750px;
    flex-direction: row;
    display: flex;
    align-items: center;
    /*justify-content: center;*/
    background-color: #F5F5F5;
  }

</style>

<script>
  require('weex-components');
  var utils = require('./weex-kit/js-kit/utils');
  var monkeyApi = require('./common-js/api');
  var animation = require('@weex-module/animation');
  var timer  

  module.exports = {
    data: {
      refreshDisplay : 'hide',
      loadingDisplay : 'hide',
      displayRefresh: 'hide',
      page:1,
      dir: 'examples',
      baseURL: '',
      splashCircle:'//duqian291902259.github.io/dusan/oair/splash_circle.png',
      currentRotate: 0,
      currentScale: 1,
      isStop: false,
      rows:[],
      currentLanguage:'JavaScript'

    },

    created: function(){
      this.baseURL = utils.getAppBaseUrl(this)

    },
    ready: function(e) {
      var storage = require('@weex-module/storage');
      var me = this;
      var isDiff = false;
      storage.getItem('rep-language',function(e){
        if (me.currentLanguage !== e.data) {
          isDiff = true;
        }

        me.currentLanguage = e.data;
        if (!me.currentLanguage) {
          me.currentLanguage ='JavaScript'
        }
        me.requestData(function(state) {
        });
      }); 

    },

    methods: {
      onclickRightItem:function(e) {
        this.$openURL(this.baseURL+'language.js'+'?from=rep');
      },      
      onappear: function (e) {

      },
      ondisappear:function (e) {

      },

      onloading: function (e) {
        var vm = this
        vm.loadingDisplay = 'show'
        vm.page = vm.page+1;
        setTimeout(function () {
          vm.loadingDisplay = 'hide'
        }, 10000)

        vm.requestData(function(state) {
          vm.loadingDisplay = 'hide'
        });
      },      
      handleRefresh: function (e) {
        var vm = this
        vm.displayRefresh = 'show'
        vm.rotate()
        vm.page =1;
        timer = setInterval(function () {
            vm.displayRefresh = 'hide'
          }, 10000)
        vm.requestData(function(state) {
          vm.displayRefresh = 'hide'
        });
        

      },
      onclickcell: function (e) {
        var index = e.target.attr.index;
        var repUrl = this.baseURL+'rep-detail.js?rep_login='+this.rows[index].owner.login+'&rep_avatar_url='+this.rows[index].owner.avatar_url+'&rep_name='+this.rows[index].name+'&rep_created_at='+this.rows[index].created_at+'&rep_homepage='+this.rows[index].homepage+'&rep_description='+encodeURIComponent(this.rows[index].description);
        this.$openURL(repUrl);
        

      },
      requestData:function (callback){

        var me = this;
       
        monkeyApi.requestRepRank(me.currentLanguage,me.page,function(data){
          if (me.page>1) {
            for (var i = 0; i < data.length; i++) {
              var item = data[i];
              me.rows.push(item);
            }

          }else{
            me.rows=data;
          }
          utils.weexLog('ddd'+JSON.stringify(me.rows[0]))
          utils.weexLog('ddd1'+me.rows[0].description)

          callback(true);
        })
      },
      anim: function(styles, timingFunction, duration, callback) {
        animation.transition(this._ids.animation.el.ref, {
          styles: styles,
          timingFunction: timingFunction,
          duration: duration
        }, callback)
      },
      // 旋转
      rotate: function() {
        var self = this;
        self.currentRotate += 30;
        self.anim({
          transform: 'rotate(' + self.currentRotate + 'deg)'
        }, 'ease-in-out', 100, function() {
          if (self.currentRotate === 360) {
            self.currentRotate = 0;
            self.rotate();

          }else {
            self.rotate();
            if (self.currentRotate === 180) {
              self.scale();
            }
          }
        });
      },
      // 缩放
      scale: function() {
        var self = this;
        self.currentScale = self.currentScale === 2 ? .5 : 0.3
        self.anim({
          transform: 'scale(' + self.currentScale + ')'
        }, 'linear', 500, function() {
          if (self.currentScale ===0.3) {
          }
        });
      }

    }  
  }
</script>
